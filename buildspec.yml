version: 0.2

phases:
  install:
    runtime-versions:
      docker: 18
  pre_build:
    commands:
      - echo Installing source NPM dependencies...
      - npm install
  build:
    commands:
      - echo Build started on `date`
      - REACT_APP_ENVIRONMENT=${ENVIRONMENT} npm run build
  post_build:
    commands:
      # copy the contents of /build to S3
      - aws s3 cp --recursive --acl public-read ./build s3://${DeployBucket}/
      # set the cache-control headers for service-worker.js to prevent
      # browser caching
      - >
        aws s3 cp --acl public-read
        --cache-control="max-age=0, no-cache, no-store, must-revalidate"
        ./build/service-worker.js s3://${DeployBucket}/
      # set the cache-control headers for index.html and error.html to prevent
      # browser caching
      - >
        aws s3 cp --acl public-read
        --cache-control="max-age=0, no-cache, no-store, must-revalidate"
        ./build/index.html s3://${DeployBucket}/
      - >
        aws s3 cp --acl public-read
        --cache-control="max-age=0, no-cache, no-store, must-revalidate"
        ./build/error.html s3://${DeployBucket}/
      # invalidate the CloudFront cache for index.html and service-worker.js
      # to force CloudFront to update its edge locations with the new versions
      # - >
      #  aws cloudfront create-invalidation --distribution-id ${Distribution}
      #  --paths /index.html /error.html /service-worker.js
artifacts:
  files:
    - '**/*'
  base-directory: build
